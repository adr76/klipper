# G-Code macros and events, see docs/Command_Templates.md
######################################################################
#
#[gcode_macro my_cmd]
#gcode:
#default_parameter_<parameter>:
#variable_<name>:
#rename_existing:
#
#[delayed_gcode my_delayed_gcode]
#initial_duration: 0.
#[delayed_gcode my_delayed_gcode]
#initial_duration: 0.
#
#[idle_timeout]
#gcode:
#timeout: 600

[respond]
# M118 <message>
# RESPOND PREFIX=<prefix> MSG="<message>"
default_prefix:

[gcode_macro G29]
gcode:
 BED_MESH_CALIBRATE
  
# POWER
[gcode_macro PSOFF]
gcode:
	SET_PIN PIN=psu VALUE=0

[gcode_macro PSON]
gcode:
	SET_PIN PIN=psu VALUE=1

# Case Light
[gcode_macro LEDOFF]
gcode:  SET_PIN PIN=led VALUE=0

[gcode_macro LEDMIN]
gcode:  
 #SET_PIN PIN=power VALUE=1
 SET_PIN PIN=led VALUE=0.1
 
[gcode_macro LEDMID]
gcode:
 SET_PIN PIN=led VALUE=0.5

[gcode_macro LEDMAX]
gcode:
 SET_PIN PIN=led VALUE=1
 
[gcode_macro LEDON]
gcode:
 SET_PIN PIN=led VALUE=1
 
# End LED

################################################
# STATE Actions
################################################
[gcode_macro DUMP]
# Dump printer parameters
# print_stats gcode_move extruder toolhead
# DUMP P='name'
gcode:
	{% set name = params.P|string %}
	{% if  name %}
		{ action_respond_info("'%s': %s" % (name, printer[name]|pprint)) }
	{% else %}
		{ action_respond_info("Printer Params: ") }
		{% for name in printer %}
			{ action_respond_info("%s " % (name)) }
		{% endfor %}
	{% endif %}

[gcode_macro test]
variable_fan: 0
gcode:
	# Dump Var
	# {action_respond_info("DUMP [printer.gcode_move] \n %s" % (printer.gcode_move|pprint))}
	# {action_respond_info("DUMP [printer.toolhead]")}
	# {action_respond_info(printer.toolhead|pprint)}
	
	M118 FAN {printer.fan.speed|float}
	M118 FAN {(printer.fan.speed * 100)|float} %
	M118 FAN S{(printer.fan.speed * 255)|int}
	#SET_GCODE_VARIABLE MACRO=_PAUSE_ VARIABLE=fan VALUE={(printer.fan.speed * 255)|int}
	#M118 FAN:{printer["gcode_macro _PAUSE_"].fan}
	
[gcode_macro state]
#printer.idle_timeout.state Idle | Printing | Ready
#{action_respond_info("X:%.3f Y:%.3f Z:%.3f" % (pos.x, pos.y, pos.z))}
#{action_respond_info("T0:%.1fC Bed:%.1fC" % (printer.extruder.temperature, printer.heater_bed.temperature))}
#{% set pos = printer.gcode_move.gcode_position %}
gcode:	
	{% set pos = printer.toolhead.position %}
	{% set tmc = printer["temperature_sensor tmc"] %}
	M118 State:{printer.idle_timeout.state}
	M118 X{pos.x|float} Y{pos.y|float} Z{pos.z|float} E{pos.e|float} F{printer.gcode_move.speed|int}
	M118 T0:{printer.extruder.temperature|round}C B:{printer.heater_bed.temperature|round}C TMC:{tmc.temperature|round}C

[gcode_macro get_tmc_temp]
gcode:
	{% set tmc = printer["temperature_sensor tmc"] %}
	M118 Now:{tmc.temperature| round} Min:{tmc.measured_min_temp|round}C Max:{tmc.measured_max_temp|round}C

[gcode_macro xyz_save]
# Save XYZ
gcode:
 {% set pos = printer.toolhead.position %}
 SAVE_VARIABLE VARIABLE=x VALUE={pos.x}
 SAVE_VARIABLE VARIABLE=y VALUE={pos.y}
 SAVE_VARIABLE VARIABLE=z VALUE={pos.z}
 M118 Save XYZ: X{pos.x|float} Y{pos.y|float} Z{pos.z|float}
 
[gcode_macro xyz_restore]
# Restore XYZ
gcode:
	{% set svv = printer.save_variables.variables %}
	SET_KINEMATIC_POSITION X={svv.x} Y={svv.y} Z={svv.z}
	M118 Restore XYZ: X{svv.x} Y{svv.y} Z{svv.z}
 
[gcode_macro state_save]
gcode:
	{% set is_paused = printer.pause_resume.is_paused %}
	{% set pos = printer.toolhead.position %}
	
	SAVE_VARIABLE VARIABLE=is_paused VALUE={is_paused}
	
	{% if not is_paused %}
		SAVE_VARIABLE VARIABLE=x VALUE={pos.x}
		SAVE_VARIABLE VARIABLE=y VALUE={pos.y}
		SAVE_VARIABLE VARIABLE=z VALUE={pos.z}	
		M118 Save X:{pos.x|float} Y:{pos.y|float} Z:{pos.z|float}
	{% endif %}	
	# {% if is_paused %}
		# M118 Print Paused
		# SAVE_VARIABLE VARIABLE=e VALUE={pos.e}
		# SAVE_VARIABLE VARIABLE=f VALUE={printer.gcode_move.speed}
		# SAVE_VARIABLE VARIABLE=th VALUE={printer.extruder.target}
		# SAVE_VARIABLE VARIABLE=tb VALUE={printer.heater_bed.target}
		# SAVE_VARIABLE VARIABLE=feed VALUE={printer.gcode_move.speed_factor}
		# SAVE_VARIABLE VARIABLE=flow VALUE={printer.gcode_move.extrude_factor}
		# SAVE_VARIABLE VARIABLE=fan VALUE={(printer.fan.speed * 100)|int}
		# M118 Target   H0:{printer.extruder.target|int}C Bed:{printer.heater_bed.target|int}C Fan:{printer.fan.speed|int}%
	# {% endif %}

[gcode_macro state_restore]
gcode:
	{% set svv = printer.save_variables.variables %}
	
	{% if not svv.is_paused %}
		M118 Restore X:{svv.x} Y:{svv.y} Z:{svv.z}
		SET_KINEMATIC_POSITION X={svv.x} Y={svv.y} Z={svv.z}
	{% endif %}	
	# {% if svv.is_paused %}
		# M118 Restore Paused Print
		#G92 [X<pos>] [Y<pos>] [Z<pos>] [E<pos>]
		#Set extruder temperature and wait: M109 [T<index>] S<temperature>
		#Set bed temperature and wait: M190 S<temperature>
		#Set fan speed: M106 S<value>
		#SET_KINEMATIC_POSITION X={svv.x} Y={svv.y} Z={svv.z}
		#SET_HEATER_TEMPERATURE HEATER=extruder TARGET={svv.th}
		#SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={svv.tb}
		#TEMPERATURE_WAIT SENSOR=<config_name> [MINIMUM=<target>] [MAXIMUM=<target>]
		#SET_FAN_SPEED FAN=fan SPEED={svv.fan}
		# M118 H0:{svv.th}C Bed:{svv.tb}C Fan:{svv.fan}%
	# {% endif %}

[gcode_macro manual_move]
#!! Must home axis first: 145.000 50.000 10.000 [0.000]
default_parameter_X: 145
default_parameter_Y: 90
default_parameter_Z: 100
gcode:
	SET_KINEMATIC_POSITION X={X} Y={Y} Z={Z}
	#M118 SET X:{X} Y:{Y} Z:{Z}

[gcode_macro center_move]
gcode:
	G1 X145 Y100 F6000

[gcode_macro _RESTART_]
gcode:
	#RESPOND MSG="// action:psu_on"
	LEDOFF
	#FIRMWARE_RESTART
	G4 S3
	RESTART
	LEDMIN
	M118 KLIPPER RESTARTED

############################### 
# PRINT JOB MACRO
############################### 
	
[gcode_macro PRINT_PRESENT]
default_parameter_Z: 100
gcode:
	G91
	G1 E-1 F300
	G1 Z+0.5 E-2 F2000
	G1 Z+20 F600
	G90
	{% if printer.toolhead.position.z < Z %}
		G1 Z{Z} F600
	{% endif %}
	#M84     #Motor Off
	
[gcode_macro _CANCEL_]
gcode:
	{action_respond_info("action:cancel")} #Octoprint action
	TURN_OFF_HEATERS
	M107      #Fan Off
	{% if not printer.pause_resume.is_paused %}
		PRINT_PRESENT
	{% endif %}
	M220 S100 #Reset Feed
	M221 S100 #Reset Flow
	M118 Print Cancel!

[gcode_macro _PAUSE_]
variable_fan: 0
gcode:
	{% set fan = (printer.fan.speed * 100)|int %}
	SET_GCODE_VARIABLE MACRO=_PAUSE_ VARIABLE=fan VALUE={fan}
	M400
	PAUSE	
	M107
	G91
	M83
	G1 E-1 F300
	G1 Z+0.5 E-3 F2400
	G90
	G1 X0 Y193 F12000
	M400
	M118 Print Paused!
  
[gcode_macro _RESUME_]
gcode:
	{% set pause = printer["gcode_macro _PAUSE_"] %}
	G90
	M83
	G1 E5 F1200
	G4 P5000
	G1 X0 Y200 F600
	G1 X10 Y200 F1200
	G1 E3 F2400	
	RESUME VELOCITY=200 #mm/s
	SET_FAN S={pause.fan}
	M118 Print Resumed!

[gcode_macro START_GCODE]
# Remove Retract
# rxrepl -f "[output_filepath]" -a -m line -s "^; layer 1,.*\r\n" -r "\0; "
# Load and Select file to Octoprint
# curl -k -H "X-Api-Key: 89E7260424C248079AB09C312E84C702" -F "select=true" -F "print=false" -F "file=@[output_filepath]" "http://192.168.1.18:5000/api/files/local"
# curl -k -H "Content-Type: application/json" -H "X-Api-Key: 89E7260424C248079AB09C312E84C702" -d "{\"command\":\"select\",\"print\": false}" "http://192.168.1.18:5000/api/files/sdcard/[output_filename]"
gcode:
	CLEAR_PAUSE
	M107
	G90
	G28
	G1 X0 Y0 Z15 F6000
	M190 S{params.B|int}
	M109 S{params.H|int}
	M140 S{params.B|int}
	M104 S{params.H|int}
	clean_buble
	M117 Printing...
 
[gcode_macro clean_buble]
gcode:
	G90
	G1 Z0.5 F300
	G1 E8 F100
	G4 P3000
	G1 Z5 F300
	G4 P3000
	G1 X60 Z1 F15000
	G1 E-1 F2400
	G92 E0
	
[gcode_macro clean_brush]
gcode:
	{% if printer.idle_timeout.state == "Printing" %}
		{% set fan = (printer.fan.speed * 100)|int %}
		M117 Clean Nozle
		M400
		PAUSE
		G91
		M83
		G1 E-1 F300
		G1 Z+0.5 E-3 F2400		
		G90
		G1 X0 Y193 F12000
		M400
		G90
		M83
		G1 E5 F1200
		G4 P5000
		G1 X0 Y200 F600
		G1 X10 Y200 F1200
		G1 E3 F2400		
		RESUME VELOCITY=200 #mm/s
		SET_FAN S={fan}
	{% endif %}
[gcode_macro wipe]
gcode:
	#G90
	# Reset the G-Code Z offset (adjust Z offset if needed)
	#SET_GCODE_OFFSET Z=0.4
	#G28
	G1 X115 Y-50 Z0.2 F 6000	 
	G92 E0
	G4 P2000
	G1 E10 F100
	G1 Z0.2
	G4 P2000
	G1 E10 F100	 
	G1 X100 Y-45 Z0.2 F4000
	G1 X100 Y-35 Z0.2 F4000
	G1 X105 Y-40 Z0.2 F4000
	G1 X110 Y-40 Z0.2 F4000
	
[gcode_macro END_GCODE]
gcode:
	PRINT_PRESENT
	TURN_OFF_HEATERS
	M107    #FAN Off
	M84 	#Motor Off
	M117 Print Complete!

[gcode_macro SET_FEED]
#SET_FEED S=0..100
gcode:
	{% set feed = params.S|int %}
	M220 S{feed}
	M118 FEED:{feed}%
	
[gcode_macro SET_FLOW]
#SET_FLOW S=0..100
gcode:
	{% set flow = params.S|int %}
	M221 S{flow}
	M118 FLOW:{flow}%

[gcode_macro SET_FAN]
#SET_FAN S=0..100
#Regex: FAN:([0-9.]+). Template: {0}
gcode:
	{% set fan = params.S|int %}
	{% set pwm = (fan * 2.55)|int %}
	M106 S{pwm}
	M118 FAN:{fan}% (S{pwm})
	
######################################################################
# Filament Change M600 Bowden load 710mm
####################################################################
[gcode_macro LOAD_FILAMENT]
gcode:
	M117 Load filament
	M83 ; relative E
	G1 E600 F3000
	G92 E0
	G1 E30 F500
	G92 E0
	M400
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

[gcode_macro UNLOAD_FILAMENT]
gcode:
	M117 Unload Filament
	M83
	G1 E-5 F2000
	G1 E-660 F3000
	G92 E0.0
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

[gcode_macro M600]
gcode:
	M117 Filament Change
	SAVE_GCODE_STATE NAME=filament_change
	G91
	G1 Z50 F3600 E-2
	M400
	UNLOAD_FILAMENT
	M400
	M117 Insert filament
	PAUSE
	UPDATE_DELAYED_GCODE ID=READY_LOAD DURATION=1

[delayed_gcode READY_LOAD]
gcode:
	{% if printer.pause_resume.is_paused %}
		UPDATE_DELAYED_GCODE ID=READY_LOAD DURATION=1
	{% else %}
		LOAD_FILAMENT
		M400
		M117 Press to resume print
		PAUSE
		UPDATE_DELAYED_GCODE ID=READY_RESUME DURATION=1
	{% endif %}

[delayed_gcode READY_RESUME]
gcode:
	{% if printer.pause_resume.is_paused %}
	UPDATE_DELAYED_GCODE ID= READY_RESUME DURATION=1
	{% else %}
	CLEAR_PAUSE
	RESTORE_GCODE_STATE NAME=filament_change MOVE=1
	{% endif %}
 
[gcode_macro heater_pid_calibrate]
gcode:  
	G28               
	M107
	PID_CALIBRATE HEATER=extruder TARGET=210 # Copet    
	SAVE_CONFIG          

[gcode_macro bed_pid_calibrate]
gcode:  
	G28                
	M107
	PID_CALIBRATE HEATER=heater_bed TARGET=70 # Copet    
	SAVE_CONFIG        
		
[gcode_macro z_phase_calibrate]
gcode:
	#SAVE_GCODE_STATE NAME=z_phase_calibrate_state
	G90
	G28
	G1 X145 Y100 Z20 F6000
	ENDSTOP_PHASE_CALIBRATE
	G4 S5
	G1 Z50 F1200
	G28 Z
	ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_z
	G4 S5
	G1 Z76 F1200
	G28 Z
	ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_z
	G4 S5
	G1Z110 F1200
	G28 Z
	ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_z
	G4 S5
	G1 Z180 F1200
	G28 Z
	ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_z
	G4 S5
	G1 Z0 F300
	G4 S15
	G1 Z50 F1200
	#SAVE_CONFIG
	#RESTORE_GCODE_STATE NAME=z_phase_calibrate_state